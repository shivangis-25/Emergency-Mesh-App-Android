// Generated by view binder compiler. Do not edit!
package com.emergency.mesh.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.emergency.mesh.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMain1Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSend;

  @NonNull
  public final Button btnStartP2P;

  @NonNull
  public final Button btnStopP2P;

  @NonNull
  public final EditText etMessage;

  @NonNull
  public final TextView tvHeading;

  @NonNull
  public final TextView tvMessages;

  @NonNull
  public final TextView tvMessagesLabel;

  @NonNull
  public final TextView tvStatus;

  private ActivityMain1Binding(@NonNull ConstraintLayout rootView, @NonNull Button btnSend,
      @NonNull Button btnStartP2P, @NonNull Button btnStopP2P, @NonNull EditText etMessage,
      @NonNull TextView tvHeading, @NonNull TextView tvMessages, @NonNull TextView tvMessagesLabel,
      @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.btnSend = btnSend;
    this.btnStartP2P = btnStartP2P;
    this.btnStopP2P = btnStopP2P;
    this.etMessage = etMessage;
    this.tvHeading = tvHeading;
    this.tvMessages = tvMessages;
    this.tvMessagesLabel = tvMessagesLabel;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMain1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMain1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMain1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSend;
      Button btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.btnStartP2P;
      Button btnStartP2P = ViewBindings.findChildViewById(rootView, id);
      if (btnStartP2P == null) {
        break missingId;
      }

      id = R.id.btnStopP2P;
      Button btnStopP2P = ViewBindings.findChildViewById(rootView, id);
      if (btnStopP2P == null) {
        break missingId;
      }

      id = R.id.etMessage;
      EditText etMessage = ViewBindings.findChildViewById(rootView, id);
      if (etMessage == null) {
        break missingId;
      }

      id = R.id.tvHeading;
      TextView tvHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvHeading == null) {
        break missingId;
      }

      id = R.id.tvMessages;
      TextView tvMessages = ViewBindings.findChildViewById(rootView, id);
      if (tvMessages == null) {
        break missingId;
      }

      id = R.id.tvMessagesLabel;
      TextView tvMessagesLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvMessagesLabel == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new ActivityMain1Binding((ConstraintLayout) rootView, btnSend, btnStartP2P, btnStopP2P,
          etMessage, tvHeading, tvMessages, tvMessagesLabel, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
