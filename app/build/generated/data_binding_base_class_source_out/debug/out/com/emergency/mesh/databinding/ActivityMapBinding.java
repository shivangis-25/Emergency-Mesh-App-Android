// Generated by view binder compiler. Do not edit!
package com.emergency.mesh.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.emergency.mesh.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.osmdroid.views.MapView;

public final class ActivityMapBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout bottomButtonsLayout;

  @NonNull
  public final Button btnSafe;

  @NonNull
  public final Button btnSos;

  @NonNull
  public final Button btnViewMap;

  @NonNull
  public final MapView map;

  @NonNull
  public final TextView tvHeading;

  private ActivityMapBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout bottomButtonsLayout, @NonNull Button btnSafe, @NonNull Button btnSos,
      @NonNull Button btnViewMap, @NonNull MapView map, @NonNull TextView tvHeading) {
    this.rootView = rootView;
    this.bottomButtonsLayout = bottomButtonsLayout;
    this.btnSafe = btnSafe;
    this.btnSos = btnSos;
    this.btnViewMap = btnViewMap;
    this.map = map;
    this.tvHeading = tvHeading;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomButtonsLayout;
      LinearLayout bottomButtonsLayout = ViewBindings.findChildViewById(rootView, id);
      if (bottomButtonsLayout == null) {
        break missingId;
      }

      id = R.id.btn_safe;
      Button btnSafe = ViewBindings.findChildViewById(rootView, id);
      if (btnSafe == null) {
        break missingId;
      }

      id = R.id.btn_sos;
      Button btnSos = ViewBindings.findChildViewById(rootView, id);
      if (btnSos == null) {
        break missingId;
      }

      id = R.id.btn_view_map;
      Button btnViewMap = ViewBindings.findChildViewById(rootView, id);
      if (btnViewMap == null) {
        break missingId;
      }

      id = R.id.map;
      MapView map = ViewBindings.findChildViewById(rootView, id);
      if (map == null) {
        break missingId;
      }

      id = R.id.tvHeading;
      TextView tvHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvHeading == null) {
        break missingId;
      }

      return new ActivityMapBinding((RelativeLayout) rootView, bottomButtonsLayout, btnSafe, btnSos,
          btnViewMap, map, tvHeading);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
